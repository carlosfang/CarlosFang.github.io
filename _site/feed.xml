<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xyecho - just my notes</title>
    <description>读书，生活，技术</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 14 Mar 2024 12:01:09 +0800</pubDate>
    <lastBuildDate>Thu, 14 Mar 2024 12:01:09 +0800</lastBuildDate>
    <generator>Jekyll v4.2.2</generator>
    
      <item>
        <title>go-zero 日志输出的问题</title>
        <description>&lt;p&gt;go-zore 日志输出方式体验让我有一些不适。&lt;/p&gt;

&lt;p&gt;今天还遇到一个现象，日志输出如下：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;@timestamp&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;2024-03-09T15:48:08.026+08&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;caller&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;server/Helper.go:164&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;content&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;httpc.Do err userId[512] host[http://127.0.0.1:8888/xxxxx/xxxxxxList?offset=0&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;0026limit=10&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;0026order=desc&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;0026sortby=create_time&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;0026state=-1&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;0026states=0,1,2,3,4&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;0026biz_id=0&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;0026agent_id=512]&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;level&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;error&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;span&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;66a2ba1882458680&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;trace&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;c94c9ac8179690d592fc348b40666e16&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;出一些  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\u0026&lt;/code&gt; 之类的。 但如果把 Encoding 设置为 plain，则正常。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2024-03-09T15:47:08.006+08       error  httpc.Do err userId[512] host[http://127.0.0.1:8888/xxxxx/xxxxxxList?offset&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0&amp;amp;limit&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;10&amp;amp;order&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;desc&amp;amp;sortby&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;create_time&amp;amp;state&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-1&lt;/span&gt;&amp;amp;states&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0,1,2,3,4&amp;amp;biz_id&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0&amp;amp;agent_id&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;512]      &lt;span class=&quot;nb&quot;&gt;caller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;server/Helper.go:164        &lt;span class=&quot;nv&quot;&gt;trace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ca5e1ad81e7d0528f38b361c63a75f35  &lt;span class=&quot;nv&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;48b14f5d8bce91e9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sat, 09 Mar 2024 17:08:12 +0800</pubDate>
        <link>http://localhost:4000/go-zore-log-problem</link>
        <guid isPermaLink="true">http://localhost:4000/go-zore-log-problem</guid>
        
        <category>galang</category>
        
        
        <category>工作日志</category>
        
      </item>
    
      <item>
        <title>go-zero httpc.Do post 数据因 struct 继承导致的失败</title>
        <description>&lt;p&gt;工作时遇到的一个问题。&lt;/p&gt;

&lt;p&gt;背景大概可以简化为：请求不同服务过来的数据后做聚合，然后转发另一个服务。&lt;/p&gt;

&lt;p&gt;对于数据的处理习惯性就是：&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c&quot;&gt;// data from server A &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseB&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Offset&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int64&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&quot;offset&quot;`&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Limit&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;int64&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&quot;limit&quot;`&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;// data from server B &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseB&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Id&lt;/span&gt;    &lt;span class=&quot;kt&quot;&gt;int64&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&quot;id&quot;`&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&quot;name&quot;`&lt;/span&gt;
	  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;// send to server C&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BaseC&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;BaseA&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;BaseB&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Addr&lt;/span&gt;  &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&quot;addr&quot;`&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;baseC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BaseC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;baseC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Offset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;199&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;baseC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;baseC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;kane&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;baseC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Addr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;guangdong&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;baseC ----- &amp;gt; %+v&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;baseC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这里对 BaseC 成员变量的操作和它继承的BaseB、BaseB 的成员一样，都按 BaseC的成员一样处理。&lt;/p&gt;

&lt;p&gt;但是，在 fmt.Printf baseC 时，baseC 的结构却有点和想像中不一样。而是：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; baseC &lt;span class=&quot;nt&quot;&gt;-----&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &amp;amp;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;BaseA:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;Offset:199 Limit:0&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; BaseB:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;Id:1 Name:kane&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; Addr:guangdong&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;中包含了 “BaseA” “BaseB”。&lt;/p&gt;

&lt;p&gt;多想一步，把这个结构体转 json 输出，如下：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;baseCByte &lt;span class=&quot;nt&quot;&gt;-----&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;offset&quot;&lt;/span&gt;:199,&lt;span class=&quot;s2&quot;&gt;&quot;limit&quot;&lt;/span&gt;:0,&lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;:1,&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;kane&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;addr&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;guangdong&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;想像上面 baseC 数据的结构应该是这样的。但事实却不一样。&lt;/p&gt;

&lt;p&gt;自己 golang 的底层知识不够导致的。&lt;/p&gt;

&lt;p&gt;go-zore 的  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;httpc.Do()&lt;/code&gt;在 post 数据带上设置头信息时，&lt;a href=&quot;https://go-zero.dev/docs/tutorials/http/client/index&quot;&gt;https://go-zero.dev/docs/tutorials/http/client/index&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;s&quot;&gt;&quot;foo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;foo-header&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;foo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;bar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Do&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MethodPost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/nodes/:node&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;当  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Request&lt;/code&gt; 用了继承的方式：
如：&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Body&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Foo&lt;/span&gt;    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&quot;foo&quot;`&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Bar&lt;/span&gt;    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&quot;bar&quot;`&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Body&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Header&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`header:&quot;X-Header&quot;`&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;发送过去之后， Body 成了空的。估计就是继承无法正确解析的原因。&lt;/p&gt;
</description>
        <pubDate>Sat, 09 Mar 2024 17:08:12 +0800</pubDate>
        <link>http://localhost:4000/go-zore-struct-httpc-do-problem</link>
        <guid isPermaLink="true">http://localhost:4000/go-zore-struct-httpc-do-problem</guid>
        
        <category>golang</category>
        
        
        <category>工作日志</category>
        
      </item>
    
      <item>
        <title>golang 开发备忘</title>
        <description>&lt;p&gt;go 常用命令&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
go mod tidy 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果您想在您的项目中添加一个特定的分支作为依赖项，可以使用以下命令：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;go mod require &amp;lt;module&amp;gt;@&amp;lt;branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 02 Jan 2024 18:12:15 +0800</pubDate>
        <link>http://localhost:4000/go-note</link>
        <guid isPermaLink="true">http://localhost:4000/go-note</guid>
        
        <category>golang</category>
        
        
        <category>golang</category>
        
      </item>
    
      <item>
        <title>window11 wsl 使用问题记录</title>
        <description>&lt;p&gt;1、wsl 内无法 ping 通 宿主机的IP，无法 ping 通 外网。 试了很多方式都没有成功，自己网络方面的知识也不够全面，我补一下。&lt;/p&gt;

&lt;p&gt;最后在网上找到一个方法：[修复 WSL 无 Internet 网络连接问题]（https://www.ghostchu.com/fix-wsl-no-internet-connection/）&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Sep 2023 18:12:15 +0800</pubDate>
        <link>http://localhost:4000/window-wsl</link>
        <guid isPermaLink="true">http://localhost:4000/window-wsl</guid>
        
        <category>wsl</category>
        
        
        <category>window</category>
        
      </item>
    
      <item>
        <title>《月亮与六便士》 毛姆</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/reading/the-moon-and-sixpence-2023-06-21-09-53-03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 01 Jun 2023 19:13:00 +0800</pubDate>
        <link>http://localhost:4000/%E6%9C%88%E4%BA%AE%E4%B8%8E%E5%85%AD%E4%BE%BF%E5%A3%AB</link>
        <guid isPermaLink="true">http://localhost:4000/%E6%9C%88%E4%BA%AE%E4%B8%8E%E5%85%AD%E4%BE%BF%E5%A3%AB</guid>
        
        <category>读书</category>
        
        
        <category>reading</category>
        
      </item>
    
      <item>
        <title>《面纱》 毛姆</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/reading/the-painted-veil-2023-06-21-10-02-35.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我最不喜欢的就是讲人性，但很多故事也是深刻的讲人性才有了冲突和升华。&lt;/p&gt;

&lt;p&gt;《面纱》让人知道，我们看到人和事物就是人性上装饰的面纱，一切感觉很美好，和谐。可面纱之下才是真实的人性丑恶，很多人没看到过，很多人不相信人性如此，很多人就是喜欢表面的面纱。&lt;/p&gt;

&lt;p&gt;人生的常态是什么，是无论你喜欢否，知道否，面纱一直存在。大部分人并知道真实是什么，也不想知道真实是什么。&lt;/p&gt;

&lt;p&gt;这书和毛姆《月亮与六便士》、《刀锋》重点不一样。对比之下，《刀锋》和《月亮与六便士》更喜欢些吧。我不喜欢探讨太多的人性。&lt;/p&gt;
</description>
        <pubDate>Sat, 27 May 2023 19:13:00 +0800</pubDate>
        <link>http://localhost:4000/%E9%9D%A2%E7%BA%B1</link>
        <guid isPermaLink="true">http://localhost:4000/%E9%9D%A2%E7%BA%B1</guid>
        
        <category>读书</category>
        
        
        <category>reading</category>
        
      </item>
    
      <item>
        <title>《刀锋》 毛姆</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/reading/the-razors-edge-2023-06-20-09-45-10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;拉里一直在追寻他活着的意义，在救赎自己，也在救赎身边的人。
最终，他也不知道是否已经找到，或许找不到，或许根本没有。但他放下了，或说顿悟了。
至此，他又回到了世俗的生活。却也不是当初的自己了。&lt;/p&gt;

&lt;p&gt;感觉他什么都可以放下，什么都可以不在意。不知道在空军时他好友的死给他带来了什么样的冲击。他才开始他与众不同的道路。&lt;/p&gt;

&lt;p&gt;总有人追求自己的世界，总有人的生活有别于世俗世界。&lt;/p&gt;

&lt;p&gt;《月亮与六便士》的斯特里克兰同样走这不同于世俗的道路，但如疯狂，如疯子变态。不被世俗理解甚至被嘲笑厌恶。相比之下拉里的道路不被理解，但也温柔很多。&lt;/p&gt;

&lt;p&gt;斯特里克兰追求表达自己，拉里追求救赎自己。&lt;/p&gt;

&lt;p&gt;不明白为什么有那么多人喜欢当“人生导师”，肆无忌惮的指点和批评别人的生活或人生呢。可能最俗的人就是你自己。&lt;/p&gt;

&lt;p&gt;人是可以有很多不同的道路去走，同样也应该宽容你身边的人的各种格格不入的生活态度和行为举止。可能他在救赎自己。&lt;/p&gt;

</description>
        <pubDate>Tue, 02 May 2023 19:13:00 +0800</pubDate>
        <link>http://localhost:4000/%E5%88%80%E9%94%8B</link>
        <guid isPermaLink="true">http://localhost:4000/%E5%88%80%E9%94%8B</guid>
        
        <category>读书</category>
        
        
        <category>reading</category>
        
      </item>
    
      <item>
        <title>storage learning list</title>
        <description>&lt;p&gt;1、 QEMU/KVM 的基本使用方法： https://blog.wohin.me/posts/qemu-kvm-basic/&lt;/p&gt;

&lt;p&gt;2、 qemu-nbd技术分析: https://cloud.tencent.com/developer/article/1087439&lt;/p&gt;

&lt;p&gt;3、 Windows server 安装qemu-img : https://www.volcengine.com/docs/6627/114289&lt;/p&gt;

&lt;p&gt;4、 qemu-img for Windows: https://zhuanlan.zhihu.com/p/543230850&lt;/p&gt;

&lt;p&gt;5、 Linux 空洞文件 : https://banbanpeppa.github.io/2019/08/21/linux/holefile/&lt;/p&gt;

&lt;p&gt;6、 qcow2 镜像 ：https://zhuanlan.zhihu.com/p/534033659&lt;/p&gt;

&lt;p&gt;7、 KVM - qcow2 和 raw 格式对比 : https://blog.csdn.net/sssssuuuuu666/article/details/106999198&lt;/p&gt;

&lt;p&gt;8、 NBD（Network Block Device）简介及基本使用: https://zhuanlan.zhihu.com/p/50460919&lt;/p&gt;

&lt;p&gt;9、 qemu-nbd使用教程 : https://www.cnblogs.com/silvermagic/p/7666234.html&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;1、iSCSI 的基本架构及操作简介：https://zhuanlan.zhihu.com/p/60986068&lt;/p&gt;

&lt;p&gt;2、什么是 ISCSI? ISCSI 又能干什么呢？https://blog.csdn.net/ZhangPengFeiToWinner/article/details/87926989&lt;/p&gt;

&lt;p&gt;3、linux iscsi 网络的三种工具tgt iscsi_tgt targetcli  https://blog.csdn.net/qqqqqq999999/article/details/72547970&lt;/p&gt;

&lt;p&gt;4、tgt+ceph-rbd创建iscsi链接流程 :  https://confluence.vrviu.com:8443/pages/viewpage.action?pageId=1580763526&lt;/p&gt;

&lt;p&gt;5、TGT 学习总结 ： https://zhuanlan.zhihu.com/p/137047153  很好的文章，已经介绍到源码了。&lt;/p&gt;

&lt;p&gt;5、tgt网关源码解读 ：https://blog.csdn.net/Morry_Chan/article/details/100891020&lt;/p&gt;

&lt;p&gt;6、TGT github ：https://github.com/fujita/tgt&lt;/p&gt;

&lt;p&gt;6、ipxe : https://www.jianshu.com/p/f9070d76892a&lt;/p&gt;

&lt;p&gt;7 perf学习总结: https://zhuanlan.zhihu.com/p/141694060&lt;/p&gt;

&lt;p&gt;8、RFC7143 ： https://www.rfc-editor.org/rfc/rfc7143.html rfc 标准协议&lt;/p&gt;

&lt;p&gt;9、iscsi target tgt架构 : https://developer.aliyun.com/article/296888&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;1、Ceph—Rbd https://blog.csdn.net/weixin_45413603/article/details/103782448&lt;/p&gt;

&lt;p&gt;2、Ceph 存储介绍  https://blog.csdn.net/shenyuanhaojie/article/details/121261005&lt;/p&gt;

&lt;p&gt;3、Ceph介绍及原理架构分享 https://blog.csdn.net/robinhunan/article/details/128488026&lt;/p&gt;

&lt;p&gt;4、ceph学习路线https://www.zhihu.com/search?q=ceph%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF&amp;amp;utm_content=search_suggestion&amp;amp;type=content&lt;/p&gt;

&lt;p&gt;5、Ceph v10.0 中文文档  https://www.bookstack.cn/read/ceph-10-zh/cd0dcad3545db7c0.md&lt;/p&gt;

&lt;p&gt;6、RBD Mirror（镜像）（pacific版本） https://www.cnblogs.com/varden/p/16124316.html&lt;/p&gt;

&lt;p&gt;7、openstack 推荐几个大咖，大家可以百度找他们的博客来看：陈沙克、何明桂、孔令贤，Cloudman。&lt;/p&gt;

&lt;p&gt;8、块设备指南 ： https://access.redhat.com/documentation/zh-cn/red_hat_ceph_storage/4/html/block_device_guide/index&lt;/p&gt;

&lt;p&gt;9、我所了解的各公司使用的 Ceph 存储集群 (携程、乐视、有云、宝德云、联通等) ： https://www.cnblogs.com/sammyliu/p/4908668.html&lt;/p&gt;

&lt;p&gt;10、用Ceph搭个私人NAS网盘！ https://www.jianshu.com/p/25c7ca195aa7&lt;/p&gt;

&lt;p&gt;11、CentOS7 下安装 iSCSI Target(tgt) ，使用 Ceph rbd ：https://www.cnblogs.com/zengzhihua/p/9910704.html&lt;/p&gt;

</description>
        <pubDate>Mon, 01 May 2023 18:12:15 +0800</pubDate>
        <link>http://localhost:4000/ceph-tgt-qemu-kvm-image</link>
        <guid isPermaLink="true">http://localhost:4000/ceph-tgt-qemu-kvm-image</guid>
        
        <category>tgt</category>
        
        <category>ceph</category>
        
        
        <category>storage</category>
        
      </item>
    
      <item>
        <title>TGT Linux SCSI target framework</title>
        <description>&lt;p&gt;TGT 是一种在用户态下的 SCSI target 框架。 用于 iSCSI 和 iSER 传输协议。 支持多种方式访问设备块。&lt;/p&gt;

&lt;p&gt;框架包含了用户态下的 deamon 和工具。&lt;/p&gt;

&lt;p&gt;源码在：&lt;a href=&quot;https://github.com/fujita/tgt&quot;&gt;https://github.com/fujita/tgt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;当前，TGT 支持的传输协议有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;以太网网卡的 iSCSI  target 软件驱动程序&lt;/li&gt;
  &lt;li&gt;Infiniband 和 RDMA 网卡的 iSER target 软件驱动程序&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;支持可以访问的本地存储有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;aio, the asynchronous I/O interface also known as libaio.&lt;/li&gt;
  &lt;li&gt;rdwr, smc and mmc, synchronous I/O based on the pread() and pwrite() system calls.&lt;/li&gt;
  &lt;li&gt;null, discards all data and reads zeroes.&lt;/li&gt;
  &lt;li&gt;ssc, SCSI tape support.&lt;/li&gt;
  &lt;li&gt;sg and bsg, SCSI pass-through.&lt;/li&gt;
  &lt;li&gt;glfs, the GlusterFS network filesystem.&lt;/li&gt;
  &lt;li&gt;rbd, Ceph’s distributed-storage RADOS Block Device.&lt;/li&gt;
  &lt;li&gt;sheepdog, a distributed object storage system.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;工作中之所以用到 TGT， 就是为了访问 ceph 的块设备。&lt;/p&gt;

&lt;h1 id=&quot;iscsi-协议&quot;&gt;iSCSI 协议&lt;/h1&gt;

&lt;p&gt;SCSI (Small Computer System Interface,小型计算机系统接口) 用于主机与外部设备之间的连接。SCSI 协议是主机与磁盘通信的基本协议。它由SCSI 控制器进行数据操作,SCSI控制器相当于一个小型CPU,有自己的命令集和缓存 。&lt;/p&gt;

&lt;p&gt;而 iSCSI 协议就是让 SCSI 可以在互联网上传输。&lt;/p&gt;

&lt;h1 id=&quot;tgt-的安装&quot;&gt;TGT 的安装&lt;/h1&gt;

&lt;p&gt;两种方式：&lt;/p&gt;

&lt;p&gt;1、源码编译&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/fujita/tgt.git

&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; ceph-common librados-dev  librbd-dev   manpages-zh  xsltproc   docbook-xsl

&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;tgt

make

make &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;安装后文件的目录&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 755 /usr/sbin
&lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 755 tgtd tgtadm tgtimg /usr/sbin
&lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 755 /usr/lib/tgt/backing-store
&lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 755 bs_rbd.so /usr/lib/tgt/backing-store
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2、 apt 直接安装&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;tgt-rbd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;tgt-的程序框架&quot;&gt;TGT 的程序框架&lt;/h1&gt;

&lt;p&gt;TGT 的一个作用就是它可以在用户态下创建管理块设备。这样不用每一次代码的更新都要重新编译内核模块。&lt;/p&gt;

&lt;p&gt;tgtamd 是 TGT的管理工具，它是通过 unix socket 和 tgt daemon 通信。&lt;/p&gt;

&lt;p&gt;tgt daemon （进程名 tgtd）负责和内核态下的 tgt core 模块通信。&lt;/p&gt;

&lt;p&gt;tgt core 通过 target 驱动程序和 ceph 块设备通信。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/dfs/tgt-2023-04-24-19-16-06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;要和 ceph 块设备通信，系统要安装 ceph 的 librados。&lt;/p&gt;

&lt;p&gt;即安装时要先 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apt install -y ceph-common librados-dev  librbd-dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;和 ceph 集群通信的是 ceph librados。&lt;/p&gt;

&lt;p&gt;ceph 集群要安全认证，所以相关的配置文件要拷贝到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/ceph/&lt;/code&gt; 下。&lt;/p&gt;

&lt;p&gt;安装完 tgt 后。可以使用 rbd 命令管理  ceph 集群上的块设备。rbd 是通过 tgtd 和 ceph 集群交互的。&lt;/p&gt;

&lt;h1 id=&quot;tgt-常用的命令&quot;&gt;TGT 常用的命令&lt;/h1&gt;

&lt;p&gt;1、创建 target&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tgtadm &lt;span class=&quot;nt&quot;&gt;--lld&lt;/span&gt; iscsi &lt;span class=&quot;nt&quot;&gt;--mode&lt;/span&gt; target &lt;span class=&quot;nt&quot;&gt;--op&lt;/span&gt; new &lt;span class=&quot;nt&quot;&gt;--tid&lt;/span&gt; 1 &lt;span class=&quot;nt&quot;&gt;--targetname&lt;/span&gt; iqn.2009-02.com.example:for.all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;targetname 是我们要创建的 target 的名字，其采用IQN 命名格式：iqn.年-月.反向域名:任何唯一的名字&lt;/p&gt;

&lt;p&gt;2、创建 lun&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tgtadm &lt;span class=&quot;nt&quot;&gt;--lld&lt;/span&gt; iscsi &lt;span class=&quot;nt&quot;&gt;--mode&lt;/span&gt; logicalunit &lt;span class=&quot;nt&quot;&gt;--op&lt;/span&gt; new &lt;span class=&quot;nt&quot;&gt;--tid&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--lun&lt;/span&gt; 1 &lt;span class=&quot;nt&quot;&gt;--backing-store&lt;/span&gt; /mnt/disk.img
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;backing-store 代表我们后端存储的文件名，我们不是真正的磁盘；要模拟磁盘的数据保存功能，可以将数据保持在这个文件里。&lt;/p&gt;

&lt;p&gt;3、设置访问权限（此处我们允许所有IP访问）&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tgtadm &lt;span class=&quot;nt&quot;&gt;--lld&lt;/span&gt; iscsi &lt;span class=&quot;nt&quot;&gt;--mode&lt;/span&gt; target &lt;span class=&quot;nt&quot;&gt;--op&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--tid&lt;/span&gt; 1 &lt;span class=&quot;nt&quot;&gt;-I&lt;/span&gt; ALL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;iSCSI 协议可以设置访问权限的，可以通过 IP 来限制访问，也可以通过用户名/密码方式限制访问。&lt;/p&gt;

&lt;p&gt;4、查看创建的 target 和 lun&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tgtadm &lt;span class=&quot;nt&quot;&gt;--lld&lt;/span&gt; iscsi &lt;span class=&quot;nt&quot;&gt;--mode&lt;/span&gt; target &lt;span class=&quot;nt&quot;&gt;--op&lt;/span&gt; show
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;更多的命令可以用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;man tgtadm&lt;/code&gt; 查询。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;1、&lt;a href=&quot;https://houmin.cc/posts/454a90d3/&quot;&gt;RDMA 架构与实践&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2、&lt;a href=&quot;https://zhuanlan.zhihu.com/p/336499148&quot;&gt;Infiniband技术简介&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3、&lt;a href=&quot;https://zhuanlan.zhihu.com/p/137047153&quot;&gt;TGT学习总结&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4、&lt;a href=&quot;https://blog.csdn.net/Morry_Chan/article/details/100891020&quot;&gt;tgt网关源码解读&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5、&lt;a href=&quot;https://blog.csdn.net/qqqqqq999999/article/details/72547970&quot;&gt;linux iscsi网络的三种工具tgt iscsi_tgt targetcli&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 23 Apr 2023 18:12:15 +0800</pubDate>
        <link>http://localhost:4000/tgt-scsi-target</link>
        <guid isPermaLink="true">http://localhost:4000/tgt-scsi-target</guid>
        
        <category>tgt</category>
        
        <category>ceph</category>
        
        
        <category>storage</category>
        
      </item>
    
      <item>
        <title>linux network namespaces</title>
        <description>&lt;p&gt;一般来说，Linux 系统会安装共享一组网络接口和路由表项。我们可以修改路由表项的策略路由， 但根本上网络接口集和路由表/项还是在在整个操作系统中共享。&lt;/p&gt;

&lt;p&gt;使用网络名称空间，您可以拥有相互独立操作的网络接口和路由表的不同且独立的实例。&lt;/p&gt;
</description>
        <pubDate>Wed, 15 Mar 2023 18:12:15 +0800</pubDate>
        <link>http://localhost:4000/docker-network-namespaces</link>
        <guid isPermaLink="true">http://localhost:4000/docker-network-namespaces</guid>
        
        <category>docker</category>
        
        
        <category>分布式</category>
        
      </item>
    
  </channel>
</rss>
