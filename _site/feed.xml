<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-06-22T18:46:03+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">xyecho - just my notes</title><author><name>kane</name></author><entry><title type="html">golang painc 发生了</title><link href="http://localhost:4000/golang-panic/" rel="alternate" type="text/html" title="golang painc 发生了" /><published>2024-04-11T17:08:12+08:00</published><updated>2024-04-11T17:08:12+08:00</updated><id>http://localhost:4000/golang-panic</id><content type="html" xml:base="http://localhost:4000/golang-panic/"><![CDATA[<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	<span class="n">Config1</span> <span class="o">:=</span> <span class="n">mapConf</span><span class="p">[</span><span class="s">"game"</span><span class="p">]</span><span class="o">.</span><span class="p">(</span><span class="k">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="k">interface</span><span class="p">{})</span>
	<span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="o">:=</span> <span class="k">range</span> <span class="n">confMap</span> <span class="p">{</span>
		<span class="n">Config1</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
	<span class="p">}</span>
</code></pre></div></div>
<p>mapConf[“game”]为nil：如果mapConf[“game”]是 nil，那么在尝试进行类型断言时也会导致 panic。</p>

<p>改成：</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Config1</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="k">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="k">interface</span><span class="p">{})</span>
	<span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="o">:=</span> <span class="k">range</span> <span class="n">confMap</span> <span class="p">{</span>
		<span class="n">Config1</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
	<span class="p">}</span>
	<span class="n">mapConf</span><span class="p">[</span><span class="s">"game"</span><span class="p">]</span> <span class="o">=</span> <span class="n">Config1</span>
</code></pre></div></div>]]></content><author><name>kane</name></author><category term="工作日志" /><category term="golang" /><summary type="html"><![CDATA[无论有意还是无意，painc 就是发生了]]></summary></entry><entry><title type="html">vscode 插件列表</title><link href="http://localhost:4000/vscode-plug-in-list/" rel="alternate" type="text/html" title="vscode 插件列表" /><published>2024-04-10T05:00:30+08:00</published><updated>2024-04-10T05:00:30+08:00</updated><id>http://localhost:4000/vscode-plug-in-list</id><content type="html" xml:base="http://localhost:4000/vscode-plug-in-list/"><![CDATA[<h1 id="常有插件">常有插件</h1>

<p>1、Draw.io Integration : <a href="https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio">https://marketplace.visualstudio.com/items?itemName=hediet.vscode-drawio</a>
2、Git Graph <a href="https://marketplace.visualstudio.com/items?itemName=mhutchie.git-graph">https://marketplace.visualstudio.com/items?itemName=mhutchie.git-graph</a>
3、sonhero.io tools for VS Code： <a href="https://marketplace.visualstudio.com/items?itemName=JSONHero.jsonhero-vscode">https://marketplace.visualstudio.com/items?itemName=JSONHero.jsonhero-vscode</a>
4、AI Coding Autocomplete codeium <a href="https://marketplace.visualstudio.com/items?itemName=Codeium.codeium">https://marketplace.visualstudio.com/items?itemName=Codeium.codeium</a>
5、Project Manager <a href="https://marketplace.visualstudio.com/items?itemName=alefragnani.project-manager">https://marketplace.visualstudio.com/items?itemName=alefragnani.project-manager</a>
6、golang <a href="https://marketplace.visualstudio.com/items?itemName=golang.Go">https://marketplace.visualstudio.com/items?itemName=golang.Go</a>
7、 Markdown Preview Enhanced <a href="https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced">https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced</a></p>

<p>Tutorial :<a href="https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/">https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/</a></p>

<h1 id="配置">配置</h1>

<p>1、<a href="https://github.com/kakabei/configbox/tree/main/vscode">https://github.com/kakabei/configbox/tree/main/vscode</a></p>]]></content><author><name>kane</name></author><category term="tools" /><category term="工作提效" /><category term="工作经验" /><summary type="html"><![CDATA[工作中 vscode 常有插件列表]]></summary></entry><entry><title type="html">golang time.AddDate的问题</title><link href="http://localhost:4000/golang-time-adddate/" rel="alternate" type="text/html" title="golang time.AddDate的问题" /><published>2024-04-02T04:08:12+08:00</published><updated>2024-04-02T04:08:12+08:00</updated><id>http://localhost:4000/golang-time-adddate</id><content type="html" xml:base="http://localhost:4000/golang-time-adddate/"><![CDATA[<p>周末线上出现一个问题，3月份的订单没有算出来，从数据库表数据上看，订单数据已经是完成状态，但数据为空。</p>

<p>业务上的逻辑是，每天会计算上个月的订单和当月的订单和。一月的订单周期是一个有1日12点到下个月的1日12点。</p>

<p>如前当3月31日，上个月的周期是2月1日12点到3月1日12点；本月的周期是3月1点12到当前时间点。</p>

<p>逻辑在处理上个月的订单时用了 <code class="language-plaintext highlighter-rouge">AddDate</code></p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">lastMonth</span> <span class="o">:=</span> <span class="n">time</span><span class="o">.</span><span class="n">AddDate</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="o">-</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">)</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"200601"</span><span class="p">)</span>
</code></pre></div></div>

<p>问题就出现在这里。 当前时间是3月31时，time.AddDate(0, -1, 0) 之后，是 20240302 ，还是3月份，并不符合预期。</p>

<p>如下代码：</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">package</span> <span class="n">main</span>

<span class="k">import</span> <span class="p">(</span>
	<span class="s">"fmt"</span>
	<span class="s">"time"</span>
<span class="p">)</span>

<span class="k">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>

	<span class="n">today</span> <span class="o">:=</span> <span class="n">time</span><span class="o">.</span><span class="n">Date</span><span class="p">(</span><span class="m">2024</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">29</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">time</span><span class="o">.</span><span class="n">Local</span><span class="p">)</span>
	<span class="n">nextDay</span> <span class="o">:=</span> <span class="n">today</span><span class="o">.</span><span class="n">AddDate</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="o">-</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">)</span>
	<span class="n">fmt</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"today :%v nextDay :%+v </span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">today</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">),</span> <span class="n">nextDay</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">))</span>

	<span class="n">today</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">Date</span><span class="p">(</span><span class="m">2024</span><span class="p">,</span> <span class="m">3</span><span class="p">,</span> <span class="m">31</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">time</span><span class="o">.</span><span class="n">Local</span><span class="p">)</span>
	<span class="n">nextDay</span> <span class="o">=</span> <span class="n">today</span><span class="o">.</span><span class="n">AddDate</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="o">-</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">)</span>
	<span class="n">fmt</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"today :%v nextDay :%+v </span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">today</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">),</span> <span class="n">nextDay</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">))</span>

	<span class="n">today</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">Date</span><span class="p">(</span><span class="m">2024</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">30</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">time</span><span class="o">.</span><span class="n">Local</span><span class="p">)</span>
	<span class="n">nextDay</span> <span class="o">=</span> <span class="n">today</span><span class="o">.</span><span class="n">AddDate</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="o">-</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">)</span>
	<span class="n">fmt</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"today :%v nextDay :%+v </span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">today</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">),</span> <span class="n">nextDay</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">))</span>

	<span class="n">today</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">Date</span><span class="p">(</span><span class="m">2024</span><span class="p">,</span> <span class="m">5</span><span class="p">,</span> <span class="m">31</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">time</span><span class="o">.</span><span class="n">Local</span><span class="p">)</span>
	<span class="n">nextDay</span> <span class="o">=</span> <span class="n">today</span><span class="o">.</span><span class="n">AddDate</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="o">-</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">)</span>
	<span class="n">fmt</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"today :%v nextDay :%+v </span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">today</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">),</span> <span class="n">nextDay</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">))</span>

	<span class="n">today</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">Date</span><span class="p">(</span><span class="m">2024</span><span class="p">,</span> <span class="m">6</span><span class="p">,</span> <span class="m">30</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">time</span><span class="o">.</span><span class="n">Local</span><span class="p">)</span>
	<span class="n">nextDay</span> <span class="o">=</span> <span class="n">today</span><span class="o">.</span><span class="n">AddDate</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="o">-</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">)</span>
	<span class="n">fmt</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"today :%v nextDay :%+v </span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">today</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">),</span> <span class="n">nextDay</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">))</span>

	<span class="n">today</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">Date</span><span class="p">(</span><span class="m">2024</span><span class="p">,</span> <span class="m">7</span><span class="p">,</span> <span class="m">31</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">time</span><span class="o">.</span><span class="n">Local</span><span class="p">)</span>
	<span class="n">nextDay</span> <span class="o">=</span> <span class="n">today</span><span class="o">.</span><span class="n">AddDate</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="o">-</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">)</span>
	<span class="n">fmt</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"today :%v nextDay :%+v </span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">today</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">),</span> <span class="n">nextDay</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">))</span>

	<span class="n">today</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">Date</span><span class="p">(</span><span class="m">2024</span><span class="p">,</span> <span class="m">8</span><span class="p">,</span> <span class="m">31</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">time</span><span class="o">.</span><span class="n">Local</span><span class="p">)</span>
	<span class="n">nextDay</span> <span class="o">=</span> <span class="n">today</span><span class="o">.</span><span class="n">AddDate</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="o">-</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">)</span>
	<span class="n">fmt</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"today :%v nextDay :%+v </span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">today</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">),</span> <span class="n">nextDay</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">))</span>

	<span class="n">today</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">Date</span><span class="p">(</span><span class="m">2024</span><span class="p">,</span> <span class="m">9</span><span class="p">,</span> <span class="m">30</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">time</span><span class="o">.</span><span class="n">Local</span><span class="p">)</span>
	<span class="n">nextDay</span> <span class="o">=</span> <span class="n">today</span><span class="o">.</span><span class="n">AddDate</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="o">-</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">)</span>
	<span class="n">fmt</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"today :%v nextDay :%+v </span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">today</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">),</span> <span class="n">nextDay</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">))</span>

	<span class="n">today</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">Date</span><span class="p">(</span><span class="m">2024</span><span class="p">,</span> <span class="m">10</span><span class="p">,</span> <span class="m">31</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">time</span><span class="o">.</span><span class="n">Local</span><span class="p">)</span>
	<span class="n">nextDay</span> <span class="o">=</span> <span class="n">today</span><span class="o">.</span><span class="n">AddDate</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="o">-</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">)</span>
	<span class="n">fmt</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"today :%v nextDay :%+v </span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">today</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">),</span> <span class="n">nextDay</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">))</span>

	<span class="n">today</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">Date</span><span class="p">(</span><span class="m">2024</span><span class="p">,</span> <span class="m">11</span><span class="p">,</span> <span class="m">30</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">time</span><span class="o">.</span><span class="n">Local</span><span class="p">)</span>
	<span class="n">nextDay</span> <span class="o">=</span> <span class="n">today</span><span class="o">.</span><span class="n">AddDate</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="o">-</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">)</span>
	<span class="n">fmt</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"today :%v nextDay :%+v </span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">today</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">),</span> <span class="n">nextDay</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">))</span>

	<span class="n">today</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">Date</span><span class="p">(</span><span class="m">2024</span><span class="p">,</span> <span class="m">12</span><span class="p">,</span> <span class="m">31</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">time</span><span class="o">.</span><span class="n">Local</span><span class="p">)</span>
	<span class="n">nextDay</span> <span class="o">=</span> <span class="n">today</span><span class="o">.</span><span class="n">AddDate</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="o">-</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">)</span>
	<span class="n">fmt</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"today :%v nextDay :%+v </span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">today</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">),</span> <span class="n">nextDay</span><span class="o">.</span><span class="n">Format</span><span class="p">(</span><span class="s">"20060102"</span><span class="p">))</span>

<span class="p">}</span>

</code></pre></div></div>

<p>输出：</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>today :20240229 nextDay :20240129
today :20240331 nextDay :20240302
today :20240430 nextDay :20240330
today :20240531 nextDay :20240501
today :20240630 nextDay :20240530
today :20240731 nextDay :20240701
today :20240831 nextDay :20240731
today :20240930 nextDay :20240830
today :20241031 nextDay :20241001
today :20241130 nextDay :20241030
today :20241231 nextDay :20241201
</code></pre></div></div>
<p>其中，如  20240331、20240531、20240731、20241031 这一些时算的上月时间就出错，它依然是本月的时间。</p>

<p>解决这个问题最简单，最快的方式是引用库 <a href="https://github.com/Andrew-M-C/go.timeconv">https://github.com/Andrew-M-C/go.timeconv</a></p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">package</span> <span class="n">main</span>

<span class="k">import</span> <span class="p">(</span>
	<span class="s">"fmt"</span>
	<span class="s">"time"</span>
	<span class="s">"github.com/Andrew-M-C/go.timeconv"</span>
<span class="p">)</span>

<span class="k">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
	<span class="n">t</span> <span class="o">:=</span> <span class="n">time</span><span class="o">.</span><span class="n">Date</span><span class="p">(</span><span class="m">2019</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">31</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">time</span><span class="o">.</span><span class="n">UTC</span><span class="p">)</span>
	<span class="n">nt</span> <span class="o">:=</span> <span class="n">t</span><span class="o">.</span><span class="n">AddDate</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">)</span>	<span class="c">// Add one month</span>
	<span class="n">fmt</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"%v</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">nt</span><span class="p">)</span>		<span class="c">// 2019-03-03 00:00:00 +0000 UTC, not expected</span>

	<span class="n">nt</span> <span class="o">=</span> <span class="n">timeconv</span><span class="o">.</span><span class="n">AddDate</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">)</span>
	<span class="n">fmt</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"%v</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">nt</span><span class="p">)</span>		<span class="c">// 2019-02-28 00:00:00 +0000 UTC</span>
<span class="p">}</span>
</code></pre></div></div>

<hr />
<p>1、令人困惑的 Go time.AddDate <a href="https://learnku.com/articles/71760">https://learnku.com/articles/71760</a></p>

<p>2、Go time 包中的 AddDate 的逻辑避坑指南 <a href="https://cloud.tencent.com/developer/article/1803695">https://cloud.tencent.com/developer/article/1803695</a></p>]]></content><author><name>kane</name></author><category term="工作日志" /><category term="galang" /><summary type="html"><![CDATA[olang time.AddDate出现你意料之外的结果]]></summary></entry><entry><title type="html">常用命令 curl</title><link href="http://localhost:4000/frequently-used-command-reference-curl/" rel="alternate" type="text/html" title="常用命令 curl" /><published>2024-04-02T03:21:12+08:00</published><updated>2024-04-02T03:21:12+08:00</updated><id>http://localhost:4000/frequently-used-command-reference-curl</id><content type="html" xml:base="http://localhost:4000/frequently-used-command-reference-curl/"><![CDATA[<h1 id="curl--常见的技巧">curl  常见的技巧</h1>

<p>github 地址：<a href="https://github.com/curl/curl">https://github.com/curl/curl</a></p>

<p><strong>参数：</strong></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">-o</span> &lt;file&gt;    <span class="c"># --output: 写入文件</span>
<span class="nt">-u</span> user:pass <span class="c"># --user: 验证</span>
<span class="nt">-v</span>           <span class="c"># --verbose: 在操作期间使 curl 冗长</span>
<span class="nt">-vv</span>          <span class="c"># 更冗长</span>
<span class="nt">-s</span>           <span class="c"># --silent: 不显示进度表或错误</span>
<span class="nt">-S</span>           <span class="c"># --show-error: 与 --silent (-sS) 一起使用时，显示错误但没有进度表</span>
<span class="nt">-i</span>           <span class="c"># --include: 在输出中包含 HTTP 标头</span>
<span class="nt">-I</span>           <span class="c"># --head: 仅标头</span>
</code></pre></div></div>

<p><strong>数据：</strong></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># --data: HTTP post 数据</span>
<span class="c"># URL 编码(例如，status="Hello")</span>
<span class="nt">-d</span> <span class="s1">'data'</span>

<span class="c"># --data 通过文件</span>
<span class="nt">-d</span> @file

<span class="c"># --get: 通过 get 发送 -d 数据</span>
<span class="nt">-G</span>
</code></pre></div></div>

<p><strong>头信息 Headers：</strong></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">-A</span> &lt;str&gt;     <span class="c"># --user-agent</span>
<span class="nt">-b</span> <span class="nv">name</span><span class="o">=</span>val  <span class="c"># --cookie</span>

<span class="c"># 从 URL 的指定文件加载 cookie</span>
<span class="nt">-b</span>, <span class="nt">--cookie</span> FILE
<span class="c"># 将 cookie 从 URL 保存到指定文件</span>
<span class="nt">-c</span>, <span class="nt">--cookie-jar</span> FILE

<span class="nt">-b</span> FILE          <span class="c"># --cookie</span>
<span class="nt">-H</span> <span class="s2">"X-Foo: y"</span>    <span class="c"># --header</span>
<span class="nt">--compressed</span>     <span class="c"># 使用 deflate/gzip </span>

</code></pre></div></div>

<p><strong>ssl :</strong></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nt">--cacert</span> &lt;file&gt;
    <span class="nt">--capath</span> &lt;<span class="nb">dir</span><span class="o">&gt;</span>
<span class="nt">-E</span>, <span class="nt">--cert</span> &lt;cert&gt;     <span class="c"># --cert: 客户端证书文件</span>
    <span class="nt">--cert-type</span>       <span class="c"># der/pem/eng</span>
<span class="nt">-k</span>, <span class="nt">--insecure</span>        <span class="c"># 对于自签名证书</span>

</code></pre></div></div>

<p><strong>示例</strong></p>

<p>1、GET 请求</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-I</span> https://www.baidu.com                                          <span class="c"># curl 发请求</span>
curl <span class="nt">-v</span> <span class="nt">-I</span> https://www.baidu.com                                       <span class="c"># 带有详细信息的 curl 发请求</span>
curl <span class="nt">-X</span> GET https://www.baidu.com                                      <span class="c"># 使用显式 http 方法进行 curl</span>
curl <span class="nt">--noproxy</span> 127.0.0.1 http://www.stackoverflow.com                  <span class="c"># 没有 http 代理的 curl</span>
curl <span class="nt">--connect-timeout</span> 10 <span class="nt">-I</span> <span class="nt">-k</span> https://www.baidu.com                  <span class="c"># curl 默认没有超时</span>
curl <span class="nt">--verbose</span> <span class="nt">--header</span> <span class="s2">"Host: www.mytest.com:8182"</span> www.baidu.com      <span class="c"># curl 得到额外的标题</span>
curl <span class="nt">-k</span> <span class="nt">-v</span> https://www.google.com                                      <span class="c"># curl 获取带有标题的响应</span>

</code></pre></div></div>

<p>2、POST 请求</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>url <span class="nt">-d</span> <span class="s2">"name=username&amp;password=123456"</span> &lt;URL&gt;    <span class="c"># curl 发请求</span>
curl &lt;URL&gt; <span class="nt">-H</span> <span class="s2">"content-type: application/json"</span> <span class="nt">-d</span> <span class="s2">"{ </span><span class="se">\"</span><span class="s2">woof</span><span class="se">\"</span><span class="s2">: </span><span class="se">\"</span><span class="s2">bark</span><span class="se">\"</span><span class="s2">}"</span>    <span class="c"># curl 发送 json</span>
</code></pre></div></div>

<p>3、高级用法</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-L</span> <span class="nt">-s</span> http://ipecho.net/plain, curl <span class="nt">-L</span> <span class="nt">-s</span> http://whatismijnip.nl            <span class="c"># 获取我的公共 IP撒··</span>
curl <span class="nt">-u</span> <span class="nv">$username</span>:<span class="nv">$password</span> http://repo.dennyzhang.com/README.txt                <span class="c"># 带凭证的 curl</span>
curl <span class="nt">-v</span> <span class="nt">-F</span> <span class="nv">key1</span><span class="o">=</span>value1 <span class="nt">-F</span> <span class="nv">upload</span><span class="o">=</span>@localfilename &lt;URL&gt;                            <span class="c"># curl 上传</span>
curl <span class="nt">-k</span> <span class="nt">-v</span> <span class="nt">--http2</span> https://www.google.com/                                       <span class="c"># 使用 http2 curl</span>
curl <span class="nt">-T</span> cryptopp552.zip <span class="nt">-u</span> <span class="nb">test</span>:test ftp://10.32.99.187/                         <span class="c"># url ftp 上传</span>
curl <span class="nt">-u</span> <span class="nb">test</span>:test ftp://10.32.99.187/cryptopp552.zip <span class="nt">-o</span> cryptopp552.zip    curl  <span class="c"># ftp 下载</span>
curl <span class="nt">-v</span> <span class="nt">-u</span> admin:admin123 <span class="nt">--upload-file</span> package1.zip http://mysever:8081/dir/package1.zip    <span class="c"># 使用凭证 curl 上传</span>
</code></pre></div></div>

<p>4、查询当前机器的出口IP</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="o">(</span>base<span class="o">)</span> C:<span class="se">\t</span>ools&gt; curl cip.cc
IP      : 121.12.81.78
地址    : 中国  广东  江门
运营商  : 电信

数据二  : 广东省深圳市 | 电信

数据三  : 中国广东省深圳市 | 电信
URL     : http://www.cip.cc/121.12.81.78

</code></pre></div></div>]]></content><author><name>kane</name></author><category term="工具" /><category term="工作提效" /><summary type="html"><![CDATA[Frequently Used Command Reference Curl]]></summary></entry><entry><title type="html">常用命令 git</title><link href="http://localhost:4000/frequently-used-command-reference-git/" rel="alternate" type="text/html" title="常用命令 git" /><published>2024-04-02T03:21:12+08:00</published><updated>2024-04-02T03:21:12+08:00</updated><id>http://localhost:4000/frequently-used-command-reference-git</id><content type="html" xml:base="http://localhost:4000/frequently-used-command-reference-git/"><![CDATA[<h1 id="撤销修改">撤销修改</h1>

<h4 id="一未使用-git-add-缓存代码">一、未使用 git add 缓存代码</h4>

<p>撤销指定文件：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git checkout <span class="nt">--</span> filepathname
</code></pre></div></div>

<p>撤销所有的文件修改可以使用 </p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git checkout <span class="nb">.</span>
</code></pre></div></div>

<p>对新建文件无效</p>

<h4 id="二已经使用了-git-add-缓存了代码">二、已经使用了  git add 缓存了代码</h4>

<p>撤销指定文件:  </p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git reset HEAD filepathname
</code></pre></div></div>

<p>撤销所有的文件修改可以使用  </p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git reset HEAD <span class="nb">.</span>
</code></pre></div></div>

<p>清除 git  对于文件修改的缓存。相当于撤销 git add 命令所在的工作。</p>

<h4 id="三已经用-git-commit-提交了代码">三、已经用 git commit  提交了代码</h4>

<p>来回退到上一次commit的状态 :</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git reset <span class="nt">--hard</span> HEAD^ 
</code></pre></div></div>

<p>此命令可以用来回退到任意版本：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git reset <span class="nt">--hard</span>  commitid

</code></pre></div></div>

<h1 id="分支">分支</h1>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git fetch <span class="nt">--prune</span>  <span class="c"># 刷新本地和远程一样</span>

git branch <span class="nt">-d</span> 分支名  <span class="c">#  删除本地分支</span>

git checkout <span class="nt">-b</span> fix-instance-count origin/main  <span class="c"># 在本地创建一个分支，同时把远程的分支同步下来</span>

git push <span class="nt">-u</span> origin new-branch   <span class="c"># 把分支同步到远程仓库</span>
</code></pre></div></div>

<p>git 提交一个分支，发现远程已经被删除，如何再次提交可以用 ：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git push origin develop_2.0.4
</code></pre></div></div>

<p><a href="https://www.freecodecamp.org/chinese/news/git-undo-merge-how-to-revert-the-last-merge-commit-in-git/">Git 撤销合并——如何在 Git 中恢复之前的合并提交</a></p>

<p>创建切换分支：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git ckeckout  <span class="nt">-b</span> feature/1.15.1-kane
</code></pre></div></div>
<p>提交分支</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git push origin feature/1.15.1-kane 
</code></pre></div></div>

<p>合并分支，把本地的分支 feat1 合并到  feat2 中去</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git checkout feat2          <span class="c">#  更新  feat2 分支</span>
git merge feat1             <span class="c"># 合并 feat1 到  feat2</span>
git push origin feat2       <span class="c"># 推送 feat2</span>
</code></pre></div></div>

<hr />

<p>基于 Merge Request 的开发流程 :<a href="https://wikinote.gitbook.io/git-learning/gitlab-cao-zuo/gitlab-merge-request">https://wikinote.gitbook.io/git-learning/gitlab-cao-zuo/gitlab-merge-request</a></p>

<p>如何撤销 Merge Request？<a href="https://wikinote.gitbook.io/git-learning/gitlab-cao-zuo/gitlab-merge-request-revert">https://wikinote.gitbook.io/git-learning/gitlab-cao-zuo/gitlab-merge-request-revert</a></p>]]></content><author><name>kane</name></author><category term="工具" /><category term="工作提效" /><summary type="html"><![CDATA[Frequently Used Command Reference git]]></summary></entry><entry><title type="html">go-zero swagger 的使用</title><link href="http://localhost:4000/go-zore-swagger/" rel="alternate" type="text/html" title="go-zero swagger 的使用" /><published>2024-03-09T17:08:12+08:00</published><updated>2024-03-09T17:08:12+08:00</updated><id>http://localhost:4000/go-zore-swagger</id><content type="html" xml:base="http://localhost:4000/go-zore-swagger/"><![CDATA[<p>Swagger 是一个开源的 API 设计工具，它帮助开发者设计、构建、记录和使用RESTful Web服务。Swagger的核心是 OpenAPI 规范。</p>

<p>官网：(https://swagger.io/)[https://swagger.io/]</p>

<p>主要特点：</p>
<ul>
  <li>自动化文档生成：Swagger可以自动从代码注释和API定义生成API文档，这些文档可以被人类阅读，也可以被机器解析。</li>
  <li>交互式API测试：Swagger UI提供了一个交互式的界面，允许开发者直接在浏览器中测试API，而无需编写代码。</li>
</ul>

<p>s</p>]]></content><author><name>kane</name></author><category term="工作日志" /><category term="galang" /><summary type="html"><![CDATA[swagger]]></summary></entry><entry><title type="html">go-zero 日志输出的问题</title><link href="http://localhost:4000/go-zore-log-problem/" rel="alternate" type="text/html" title="go-zero 日志输出的问题" /><published>2024-03-09T17:08:12+08:00</published><updated>2024-03-09T17:08:12+08:00</updated><id>http://localhost:4000/go-zore-log-problem</id><content type="html" xml:base="http://localhost:4000/go-zore-log-problem/"><![CDATA[<p>go-zore 日志输出方式体验让我有一些不适。</p>

<p>今天还遇到一个现象，日志输出如下：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">{</span><span class="s2">"@timestamp"</span>:<span class="s2">"2024-03-09T15:48:08.026+08"</span>,<span class="s2">"caller"</span>:<span class="s2">"server/Helper.go:164"</span>,<span class="s2">"content"</span>:<span class="s2">"httpc.Do err userId[512] host[http://127.0.0.1:8888/xxxxx/xxxxxxList?offset=0</span><span class="se">\u</span><span class="s2">0026limit=10</span><span class="se">\u</span><span class="s2">0026order=desc</span><span class="se">\u</span><span class="s2">0026sortby=create_time</span><span class="se">\u</span><span class="s2">0026state=-1</span><span class="se">\u</span><span class="s2">0026states=0,1,2,3,4</span><span class="se">\u</span><span class="s2">0026biz_id=0</span><span class="se">\u</span><span class="s2">0026agent_id=512]"</span>,<span class="s2">"level"</span>:<span class="s2">"error"</span>,<span class="s2">"span"</span>:<span class="s2">"66a2ba1882458680"</span>,<span class="s2">"trace"</span>:<span class="s2">"c94c9ac8179690d592fc348b40666e16"</span><span class="o">}</span>

</code></pre></div></div>

<p>出一些  <code class="language-plaintext highlighter-rouge">\u0026</code> 之类的。 但如果把 Encoding 设置为 plain，则正常。</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>2024-03-09T15:47:08.006+08       error  httpc.Do err userId[512] host[http://127.0.0.1:8888/xxxxx/xxxxxxList?offset<span class="o">=</span>0&amp;limit<span class="o">=</span>10&amp;order<span class="o">=</span>desc&amp;sortby<span class="o">=</span>create_time&amp;state<span class="o">=</span><span class="nt">-1</span>&amp;states<span class="o">=</span>0,1,2,3,4&amp;biz_id<span class="o">=</span>0&amp;agent_id<span class="o">=</span>512]      <span class="nb">caller</span><span class="o">=</span>server/Helper.go:164        <span class="nv">trace</span><span class="o">=</span>ca5e1ad81e7d0528f38b361c63a75f35  <span class="nv">span</span><span class="o">=</span>48b14f5d8bce91e9
</code></pre></div></div>]]></content><author><name>kane</name></author><category term="工作日志" /><category term="galang" /><summary type="html"><![CDATA[用 json 格式输出时有字段显示不正常，用 plain 格式时正常]]></summary></entry><entry><title type="html">go-zero httpc.Do post 数据因 struct 继承导致的失败</title><link href="http://localhost:4000/go-zore-struct-httpc-do-problem/" rel="alternate" type="text/html" title="go-zero httpc.Do post 数据因 struct 继承导致的失败" /><published>2024-03-09T17:08:12+08:00</published><updated>2024-03-09T17:08:12+08:00</updated><id>http://localhost:4000/go-zore-struct-httpc-do-problem</id><content type="html" xml:base="http://localhost:4000/go-zore-struct-httpc-do-problem/"><![CDATA[<p>工作时遇到的一个问题。</p>

<p>背景大概可以简化为：请求不同服务过来的数据后做聚合，然后转发另一个服务。</p>

<p>对于数据的处理习惯性就是：</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c">// data from server A </span>
<span class="k">type</span> <span class="n">BaseB</span> <span class="k">struct</span> <span class="p">{</span>
	<span class="n">Offset</span> <span class="kt">int64</span> <span class="s">`json:"offset"`</span>
	<span class="n">Limit</span>  <span class="kt">int64</span> <span class="s">`json:"limit"`</span>
<span class="p">}</span>

<span class="c">// data from server B </span>
<span class="k">type</span> <span class="n">BaseB</span> <span class="k">struct</span> <span class="p">{</span>
	<span class="n">Id</span>    <span class="kt">int64</span> <span class="s">`json:"id"`</span>
    <span class="n">Name</span> <span class="kt">string</span> <span class="s">`json:"name"`</span>
	  
<span class="p">}</span>

<span class="c">// send to server C</span>
<span class="k">type</span> <span class="n">BaseC</span>  <span class="k">struct</span> <span class="p">{</span>
	<span class="n">BaseA</span>
	<span class="n">BaseB</span>
    <span class="n">Addr</span>  <span class="kt">string</span> <span class="s">`json:"addr"`</span>
<span class="p">}</span>

<span class="n">baseC</span> <span class="o">:=</span> <span class="nb">new</span><span class="p">(</span><span class="n">BaseC</span><span class="p">)</span>
<span class="n">baseC</span><span class="o">.</span><span class="n">Offset</span> <span class="o">=</span> <span class="m">199</span>
<span class="n">baseC</span><span class="o">.</span><span class="n">Id</span> <span class="o">=</span> <span class="m">1</span>
<span class="n">baseC</span><span class="o">.</span><span class="n">Name</span> <span class="o">=</span> <span class="s">"kane"</span>
<span class="n">baseC</span><span class="o">.</span><span class="n">Addr</span> <span class="o">=</span> <span class="s">"guangdong"</span>
<span class="n">fmt</span><span class="o">.</span><span class="n">Printf</span><span class="p">(</span><span class="s">"baseC ----- &gt; %+v</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">baseC</span><span class="p">)</span>

</code></pre></div></div>

<p>这里对 BaseC 成员变量的操作和它继承的BaseB、BaseB 的成员一样，都按 BaseC的成员一样处理。</p>

<p>但是，在 fmt.Printf baseC 时，baseC 的结构却有点和想像中不一样。而是：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code> baseC <span class="nt">-----</span> <span class="o">&gt;</span> &amp;<span class="o">{</span>BaseA:<span class="o">{</span>Offset:199 Limit:0<span class="o">}</span> BaseB:<span class="o">{</span>Id:1 Name:kane<span class="o">}</span> Addr:guangdong<span class="o">}</span>
</code></pre></div></div>
<p>中包含了 “BaseA” “BaseB”。</p>

<p>多想一步，把这个结构体转 json 输出，如下：</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>baseCByte <span class="nt">-----</span> <span class="o">&gt;</span> <span class="o">{</span><span class="s2">"offset"</span>:199,<span class="s2">"limit"</span>:0,<span class="s2">"id"</span>:1,<span class="s2">"name"</span>:<span class="s2">"kane"</span>,<span class="s2">"addr"</span>:<span class="s2">"guangdong"</span><span class="o">}</span>
</code></pre></div></div>

<p>想像上面 baseC 数据的结构应该是这样的。但事实却不一样。</p>

<p>自己 golang 的底层知识不够导致的。</p>

<p>go-zore 的  <code class="language-plaintext highlighter-rouge">httpc.Do()</code>在 post 数据带上设置头信息时，<a href="https://go-zero.dev/docs/tutorials/http/client/index">https://go-zero.dev/docs/tutorials/http/client/index</a></p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="n">flag</span><span class="o">.</span><span class="n">Parse</span><span class="p">()</span>

    <span class="n">req</span> <span class="o">:=</span> <span class="n">Request</span><span class="p">{</span>
        <span class="n">Node</span><span class="o">:</span>   <span class="s">"foo"</span><span class="p">,</span>
        <span class="n">Header</span><span class="o">:</span> <span class="s">"foo-header"</span><span class="p">,</span>
        <span class="n">Foo</span><span class="o">:</span> <span class="s">"foo"</span><span class="p">,</span>
        <span class="n">Bar</span><span class="o">:</span> <span class="s">"bar"</span><span class="p">,</span>
    <span class="p">}</span>
    <span class="n">resp</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">httpc</span><span class="o">.</span><span class="n">Do</span><span class="p">(</span><span class="n">context</span><span class="o">.</span><span class="n">Background</span><span class="p">(),</span> <span class="n">http</span><span class="o">.</span><span class="n">MethodPost</span><span class="p">,</span> <span class="o">*</span><span class="n">domain</span><span class="o">+</span><span class="s">"/nodes/:node"</span><span class="p">,</span> <span class="n">req</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">err</span> <span class="o">!=</span> <span class="no">nil</span> <span class="p">{</span>
        <span class="n">fmt</span><span class="o">.</span><span class="n">Println</span><span class="p">(</span><span class="n">err</span><span class="p">)</span>
        <span class="k">return</span>
    <span class="p">}</span>

    <span class="n">io</span><span class="o">.</span><span class="n">Copy</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">Stdout</span><span class="p">,</span> <span class="n">resp</span><span class="o">.</span><span class="n">Body</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>
<p>当  <code class="language-plaintext highlighter-rouge">Request</code> 用了继承的方式：
如：</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">type</span> <span class="n">Body</span> <span class="k">struct</span> <span class="p">{</span>
    <span class="n">Foo</span>    <span class="kt">string</span> <span class="s">`json:"foo"`</span>
    <span class="n">Bar</span>    <span class="kt">string</span> <span class="s">`json:"bar"`</span>
<span class="p">}</span>
    
<span class="k">type</span> <span class="n">Request</span> <span class="k">struct</span> <span class="p">{</span>
    <span class="n">Body</span>
    <span class="n">Header</span> <span class="kt">string</span> <span class="s">`header:"X-Header"`</span>
<span class="p">}</span>
</code></pre></div></div>

<p>发送过去之后， Body 成了空的。估计就是继承无法正确解析的原因。</p>]]></content><author><name>kane</name></author><category term="工作日志" /><category term="golang" /><summary type="html"><![CDATA[golang 结构体的"继承"导致 go-zero 的 httpc.Do() 发送失败的问题]]></summary></entry><entry><title type="html">python mysql 插入更新一些特殊的字符</title><link href="http://localhost:4000/python-mysql-connector/" rel="alternate" type="text/html" title="python mysql 插入更新一些特殊的字符" /><published>2024-03-09T17:08:12+08:00</published><updated>2024-03-09T17:08:12+08:00</updated><id>http://localhost:4000/python-mysql-connector</id><content type="html" xml:base="http://localhost:4000/python-mysql-connector/"><![CDATA[<p>写了一个脚本，把一个mysql 表的中数据从一个表更新到另一个表中。其他有字段是路径，包含有 <code class="language-plaintext highlighter-rouge">/</code> 和  <code class="language-plaintext highlighter-rouge">'</code>  等字符。</p>

<p>第一次的做法是：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">sql</span> <span class="o">=</span> <span class="s">"update t_softname set icon=%s, start_cmd=%s where name=%s"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">icon</span><span class="p">,</span> <span class="n">link</span><span class="p">,</span> <span class="n">name</span><span class="p">)</span>
    <span class="n">cursor</span><span class="p">.</span><span class="n">execute</span><span class="p">(</span><span class="n">sql</span><span class="p">)</span> 
</code></pre></div></div>

<p>却发现了问题，就是在遇到特殊的字符会被转义。如：写入的路径后会没了斜杠 <code class="language-plaintext highlighter-rouge">\</code>。或遇到 <code class="language-plaintext highlighter-rouge">'</code> 出现 sql 解析异常。</p>

<p>这是字符串被转义导致的。</p>

<p>要<strong>使用参数化查询</strong>才可以，如下：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
    <span class="n">sql</span> <span class="o">=</span> <span class="s">"update t_softname set icon=%s, start_cmd=%s where name=%s"</span>
    <span class="n">cursor</span><span class="p">.</span><span class="n">execute</span><span class="p">(</span><span class="n">sql</span><span class="p">,(</span><span class="n">icon</span><span class="p">,</span> <span class="n">link</span><span class="p">,</span> <span class="n">name</span><span class="p">))</span>  
</code></pre></div></div>]]></content><author><name>kane</name></author><category term="工作日志" /><category term="python" /><summary type="html"><![CDATA[python mysql 使用参数化查询处理特殊字符]]></summary></entry><entry><title type="html">golang 开发备忘</title><link href="http://localhost:4000/golang-note/" rel="alternate" type="text/html" title="golang 开发备忘" /><published>2024-01-02T18:12:15+08:00</published><updated>2024-01-02T18:12:15+08:00</updated><id>http://localhost:4000/golang-note</id><content type="html" xml:base="http://localhost:4000/golang-note/"><![CDATA[<h1 id="golang--资料">golang  资料</h1>

<p>Go 语言高性能编程 ： <a href="https://geektutu.com/post/high-performance-go.html?continueFlag=d5490667caa63d66b43697894ac52925">https://geektutu.com/post/high-performance-go.html?continueFlag=d5490667caa63d66b43697894ac52925</a></p>

<h1 id="golang-笔记">golang 笔记</h1>]]></content><author><name>kane</name></author><category term="golang" /><category term="golang" /><summary type="html"><![CDATA[golang 开发过程记录的]]></summary></entry></feed>